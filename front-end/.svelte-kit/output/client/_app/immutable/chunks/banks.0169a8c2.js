import{W as b,X as m,Y as u,Z as p}from"./scheduler.ebd51d3c.js";import{g,t as v,c as w,a as B}from"./index.d591bbc4.js";import{P as x}from"./functions.839aea76.js";function N(e,t){const l=t.token={};function r(c,s,_,k){if(t.token!==l)return;t.resolved=k;let n=t.ctx;_!==void 0&&(n=n.slice(),n[_]=k);const a=c&&(t.current=c)(n);let d=!1;t.block&&(t.blocks?t.blocks.forEach((o,h)=>{h!==s&&o&&(g(),v(o,1,1,()=>{t.blocks[h]===o&&(t.blocks[h]=null)}),w())}):t.block.d(1),a.c(),B(a,1),a.m(t.mount(),t.anchor),d=!0),t.block=a,t.blocks&&(t.blocks[s]=a),d&&p()}if(b(e)){const c=m();if(e.then(s=>{u(c),r(t.then,1,t.value,s),u(null)},s=>{if(u(c),r(t.catch,2,t.error,s),u(null),!t.hasCatch)throw s}),t.current!==t.pending)return r(t.pending,0),!0}else{if(t.current!==t.then)return r(t.then,1,t.value,e),!0;t.resolved=e}}function P(e,t,l){const r=t.slice(),{resolved:c}=e;e.current===e.then&&(r[e.value]=c),e.current===e.catch&&(r[e.error]=c),e.block.p(r,l)}async function $(e){try{const t=await fetch(`${x}/api/banks/name/${e}`);if(!t.ok)throw new Error(`Failed to fetch bank by Name: ${t.statusText}`);return await t.json()}catch(t){console.error("Error in getOneBankByName:",t);return}}export{$ as g,N as h,P as u};
